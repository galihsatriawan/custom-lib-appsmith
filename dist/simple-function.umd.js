!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).simpleFunction=t()}(this,(function(){"use strict";return{state:{env:"dev",storeValue:Function,navigateTo:Function,clearStore:Function,showAlert:Function},field:{token:"tokens"},config:{env:{dev:{host:"https://evm-rbac.staging.evermosa2z.com"}},path:{user:{login:"/v1/user/login",refreshToken:"/v1/user/refresh",logout:"/v1/user/logout",register:"/v1/user/register"},subject:{authorize:"/v1/subject/authorize",refreshToken:"/v1/subject/refresh",logout:"/v1/subject/logout"}}},setState(e,t,o,s,r){this.state.env=e,this.state.storeValue=t,this.state.navigateTo=o,this.state.clearStore=s,this.state.showAlert=r},decodeToken:e=>jsonwebtoken.decode(e),async login(e,t){let o=this.config.env[this.state.env].host+this.config.path.user.login;return await fetch(o,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,password:t})}).then((async e=>{let t=await e.json();if(200===t.statusCode)return this.state.storeValue(this.field.token,t.data),t.data;throw new Error(t.error)})).catch((e=>{throw new Error(`${e.message}`)}))},async register(e,t,o,s){let r=this.config.env[this.state.env].host+this.config.path.user.register;return await fetch(r,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,password:t,appName:o,merchantCode:s})}).then((async e=>{let t=await e.json();if(201===t.statusCode)return t.data;throw new Error(t.error)})).catch((e=>{throw new Error(`${e.message}`)}))},composeHeaderAuthorization:e=>({"Content-Type":"application/json",Accept:"application/json",Authorization:"Bearer "+e}),async authorizePage(e,t,o){const s=o.tokens.subjectAccessToken.filter((t=>t.object===e));if(console.log(s),0===s.length)return!1;let r=s[0].accessToken;if(t!=this.decodeToken(r).objectId)return!1;try{let e=this.config.env[this.state.env].host+this.config.path.subject.authorize;const t=await fetch(e,{method:"POST",headers:this.composeHeaderAuthorization(r)});if(!t.ok)throw new Error(`${t.error}`);return!0}catch(e){throw new Error(`${e.message}`)}return!1},async logout(e){try{let t=this.config.env[this.state.env].host+this.config.path.user.logout;const o=await fetch(t,{method:"POST",headers:this.composeHeaderAuthorization(e)});if(!o.ok)throw new Error(`${o.error}`);return this.state.clearStore(this.field.token),"success"}catch(e){throw new Error(`${e.message}`)}},async refreshToken(e){try{let t=this.config.env[this.state.env].host+this.config.path.user.refreshToken;const o=await fetch(t,{method:"POST",headers:this.composeHeaderAuthorization(e.refreshToken)});if(!o.ok)throw new Error(`${o.error}`);let s=await o.json();if(200===s.statusCode)return e.accessToken=s.data.accessToken,e.refreshToken=s.data.refreshToken,this.state.storeValue(this.field.token,e),s.data;throw new Error(s.error)}catch(e){throw new Error(`${e.message}`)}},async subjectLogout(e){try{let t=this.config.env[this.state.env].host+this.config.path.subject.logout;const o=await fetch(t,{method:"POST",headers:this.composeHeaderAuthorization(e)});if(!o.ok)throw new Error(`${o.error}`);return!0}catch(e){throw new Error(`${e.message}`)}return!1},async subjectRefreshToken(e,t){try{let o=this.config.env[this.state.env].host+this.config.path.subject.refreshToken,s=-1;for(let o=0;o<t.subjectAccessToken;o++)if(t.subjectAccessToken[o].refreshToken==e){s=o;break}const r=await fetch(o,{method:"POST",headers:this.composeHeaderAuthorization(e)});if(!r.ok)throw new Error(`${r.error}`);let n=await r.json();if(200===n.statusCode)return-1!=s?(t.subjectAccessToken[s].accessToken=n.data.accessToken,t.subjectAccessToken[s].refreshToken=n.data.refreshToken):t.subjectAccessToken.push(n.data),this.state.storeValue(this.field.token,t),n.data;throw new Error(n.error)}catch(e){throw new Error(`${e.message}`)}}}}));
